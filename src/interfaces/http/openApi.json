{
  "openapi": "3.0.0",
  "info": {
    "title": "AmberJS API",
    "version": "v1"
  },
  "servers": [
    {

      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/login" : {
      "post" : {
        "description" : "Login User",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },
              "examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\"\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description": "Success"
          }
        }
      }
    },
    "/api/add" : {
      "post" : {
        "description" : "Create new user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },
              "examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description": "Data Created."
          },
          "400" : {
            "description": "Invalid input."
          }
        }
      }
    },
    "/api/users" : {
      "get" : {
        "description" : "Get list of all users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "security":[ 
          { 
             "bearerAuth":[]
          }
       ],
        "responses" : {
          "200" : {
            "description": "Success"
          },
          "401" : {
              "description": "User not Authenticated"
          },
          "403" : {
            "description": "User not Authorized"
          }
        }
      }
    },
    "/api/user" : {
      "get" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "security":[ 
          { 
             "bearerAuth":[]
          }
       ],
        "responses" : {
          "200" : {
            "description": "Success"
          },
          "401" : {
              "description": "User not Authenticated"
          },
          "403" : {
            "description": "User not Authorized"
          }
        }
      }
    },
    "/api/update" : {
      "put" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },"examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            
            }
          }
        },
        "security":[ 
          { 
             "bearerAuth":[]
          }
       ],
        "responses" : {
          "202" : {
            "description": "Data accepted."
          },
          "401" : {
              "description": "User not Authenticated"
          },
          "403" : {
            "description": "User not Authorized"
          },
          "400" : {
            "description": "Invalid input."
          }
        }
      }
    },    
    "/api/delete" : {
      "delete" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },"examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            
            }
          }
        },
        "security":[ 
          { 
             "bearerAuth":[]
          }
       ],
        "responses" : {
          "200" : {
            "description": "Success"
          },
          "401" : {
              "description": "User not Authenticated"
          },
          "403" : {
            "description": "User not Authorized"
          }
        }
      }
    }
  },"securityDefinitions":{ 
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
 },
  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "ValidationError" ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "NotFoundError" ]
        },
        "details": {
          "type": "string",
          "enum": [ "User with id {id} not found" ]
        }
      }
    }
  },
  "components": {
    "securitySchemes":{
    "bearerAuth":   {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "UUID",
            "description": "Universally Unique Identifier representing a user",
            "x-primary-key": true
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "NewUser": {
        "properties": {
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          },
          "role": {
            "type": "string",
            "required": true
          },
          "firstName": {
            "type": "string",
            "required": true
          },
          "middleName": {
            "type": "string",
            "required": true
          },
          "lastName": {
            "type": "string",
            "required": true
          }
        }
      },
      "LoginUser": {
        "properties": {
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      }
    }
  }
}
